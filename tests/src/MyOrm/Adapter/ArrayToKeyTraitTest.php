<?php namespace CTIMT\MyOrm\Adapter;

use CTIMT\MyOrm\Enum\SearchTypes;
use PHPUnit_Framework_TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-05-26 at 16:49:40.
 */
class ArrayToKeyTraitTest extends PHPUnit_Framework_TestCase
{

    /**
     * @var Alias
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Alias;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    
    public function testArrayToKeyedArrayEqualSingle(){
        $mock = $this->getMockForTrait('CTIMT\MyOrm\Adapter\ArrayToKeyTrait');
        $data=['key'=>'value'];
        $this->assertEquals(['key = :key'],$mock->arrayToKeyedArray($data));
    }
    
    public function testArrayToKeyedArrayEqualDouble(){
        $mock = $this->getMockForTrait('CTIMT\MyOrm\Adapter\ArrayToKeyTrait');
        $data=['key'=>'value','key2'=>'Value'];
        $this->assertEquals(['key = :key','key2 = :key2'],$mock->arrayToKeyedArray($data));
    }
    
    public function testArrayToKeyedArrayNotEqualSingle(){
        $mock = $this->getMockForTrait('CTIMT\MyOrm\Adapter\ArrayToKeyTrait');
        $data=['key'=>'value'];
        $this->assertEquals(['key != :key'],$mock->arrayToKeyedArray($data, SearchTypes::NOT_EQUAL));
    }
    
    public function testArrayToKeyedArrayNotEqualDouble(){
        $mock = $this->getMockForTrait('CTIMT\MyOrm\Adapter\ArrayToKeyTrait');
        $data=['key'=>'value','key2'=>'Value'];
        $this->assertEquals(['key != :key','key2 != :key2'],$mock->arrayToKeyedArray($data, SearchTypes::NOT_EQUAL));
    }
}
