<?php namespace CTIMT\MyOrm\Adapter;

use CTIMT\MyOrm\Enum\SearchTypes;
use PHPUnit_Framework_TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-05-26 at 15:49:19.
 */
class WhereStatementTest extends PHPUnit_Framework_TestCase
{

    /**
     * @var WhereStatement
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new WhereStatement([]);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    public function testGetStatmentBasic()
    {
        $data = ['field'=>'value'];
        $where = new WhereStatement($data);
        $this->assertEquals('field = :field',$where->getStatment());
    }
    
    public function testGetStatmentDefaultJoinType()
    {
        $data = ['field'=>'value','field2'=>'value'];
        $where = new WhereStatement($data);
        $this->assertEquals('field = :field and field2 = :field2',$where->getStatment());
    }
    
    public function testGetStatmentOrJoinType()
    {
        $data = ['field'=>'value','field2'=>'value'];
        $where = new WhereStatement($data,  WhereStatement::JOIN_TYPE_OR);
        $this->assertEquals('field = :field or field2 = :field2',$where->getStatment());
    }

    public function testGetStatmentSearchType()
    {
        $data = ['field'=>'value','field2'=>'value'];
        $where = new WhereStatement($data,  WhereStatement::JOIN_TYPE_AND, SearchTypes::GREATER_THAN);
        $this->assertEquals('field > :field and field2 > :field2',$where->getStatment());
    }


    public function testGetParameters()
    {
        $this->assertEquals('test', $this->object->setData('test')->getParameters());
    }

    public function testData()
    {
        $this->assertEquals('test', $this->object->setData('test')->getData());
    }

    public function testSetJoinType()
    {
        $this->assertEquals('test', $this->object->setJoinType('test')->getJoinType());
    }

    public function testSearchType()
    {
        $this->assertEquals('test', $this->object->setSearchType('test')->getSearchType());
    }
}
